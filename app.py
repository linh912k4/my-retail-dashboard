# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H6_g9KjUz3TC_g-E5slbsYWsSa61FqS4
"""

import streamlit as st
import pandas as pd
import io # Import io for buffer handling

# Import your custom functions
from eda_functions import run_eda
from model_functions import (
    preprocess_data_for_models,
    run_linear_regression,
    run_prophet_model,
    run_lstm_model,
    run_lightgbm_model
)
from optimization_functions import run_optimization
from concept_drift_functions import run_concept_drift_check

# --- Page Configuration ---
st.set_page_config(
    page_title="Ph√¢n t√≠ch & D·ª± b√°o Doanh s·ªë B√°n l·∫ª",
    layout="wide",
    initial_sidebar_state="expanded"
)

st.title("·ª®ng d·ª•ng Ph√¢n t√≠ch & D·ª± b√°o Doanh s·ªë B√°n l·∫ª")
st.markdown("""
    ·ª®ng d·ª•ng n√†y cung c·∫•p c√°c ph√¢n t√≠ch kh√°m ph√° d·ªØ li·ªáu (EDA),
    d·ª± b√°o doanh s·ªë b·∫±ng nhi·ªÅu m√¥ h√¨nh (Linear Regression, Prophet, LSTM, LightGBM),
    t·ªëi ∆∞u h√≥a t·ªìn kho, v√† ki·ªÉm tra concept drift.
""")

# --- Sidebar Navigation ---
st.sidebar.title("Ch·ª©c nƒÉng")
analysis_option = st.sidebar.radio(
    "Ch·ªçn lo·∫°i ph√¢n t√≠ch:",
    ["EDA - Ph√¢n t√≠ch D·ªØ li·ªáu",
     "D·ª± b√°o Doanh s·ªë (Model Training)",
     "T·ªëi ∆∞u h√≥a T·ªìn kho",
     "Ki·ªÉm tra Concept Drift"]
)

# --- Data Loading (Global for all modules) ---
def check_file_exists(file_path):
    """Check if file exists and return appropriate path"""
    import os
    if os.path.exists(file_path):
        return file_path
    # Try alternative paths
    alternatives = [
        f"data/{file_path}",
        f"./{file_path}",
        file_path
    ]
    for alt_path in alternatives:
        if os.path.exists(alt_path):
            return alt_path
    return file_path  # Return original if none found

EDA_DATA_PATH = check_file_exists('final_dataset.csv')
MODEL_TRANSACTION_DATA = check_file_exists('transaction_data_2023_2024_updated.csv')
MODEL_PROMOTION_DATA = check_file_exists('promotion_data.csv')
MODEL_STORE_DATA = check_file_exists('store_info_data_2023_2024_updated.csv')
OPT_STORE_INFO_DATA = check_file_exists('store_info_data_2023_2024_updated.csv')
OPT_TRANS_INFO_DATA = check_file_exists('transaction_data_2023_2024_updated.csv')
CONCEPT_DRIFT_DATA = check_file_exists('final_dataset.csv')


# --- Main Content Area based on Selection ---

if analysis_option == "EDA - Ph√¢n t√≠ch D·ªØ li·ªáu":
    st.header("Ph√¢n t√≠ch D·ªØ li·ªáu Kh√°m ph√° (EDA)")
    st.info(f"ƒêang s·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´: `{EDA_DATA_PATH}`")
    with st.spinner('ƒêang ch·∫°y EDA...'):
        # Pass st object and data path to EDA function
        run_eda(df_path=EDA_DATA_PATH, st=st)
    st.success("EDA ho√†n t·∫•t!")

elif analysis_option == "D·ª± b√°o Doanh s·ªë (Model Training)":
    st.header("D·ª± b√°o Doanh s·ªë")
    st.info(f"ƒêang s·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´: `{MODEL_TRANSACTION_DATA}`, `{MODEL_PROMOTION_DATA}`, `{MODEL_STORE_DATA}`")

    # Debug: Show available files
    import os
    st.write("**Debug - Files trong th∆∞ m·ª•c hi·ªán t·∫°i:**")
    current_files = [f for f in os.listdir('.') if f.endswith('.csv')]
    st.write(current_files)

    st.markdown("""
        Ch·ªçn m√¥ h√¨nh b·∫°n mu·ªën ch·∫°y ƒë·ªÉ d·ª± b√°o doanh s·ªë.
        L∆∞u √Ω: C√°c m√¥ h√¨nh c√≥ th·ªÉ m·∫•t m·ªôt ch√∫t th·ªùi gian ƒë·ªÉ hu·∫•n luy·ªánnnn
    """)

    # Preprocess data once for all models to avoid redundancy
    df_for_models = None
    with st.spinner('ƒêang ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu cho c√°c m√¥ h√¨nh...'):
        try:
            df_for_models = preprocess_data_for_models(
                transaction_path=MODEL_TRANSACTION_DATA,
                promotion_path=MODEL_PROMOTION_DATA,
                store_path=MODEL_STORE_DATA
            )
            st.success("Ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu ho√†n t·∫•t.")
        except FileNotFoundError as e:
            st.error(f"‚ùå L·ªói: {str(e)}")
            st.info("üí° **H∆∞·ªõng d·∫´n kh·∫Øc ph·ª•c:**")
            st.write("1. Ki·ªÉm tra c√°c file CSV c√≥ trong th∆∞ m·ª•c g·ªëc c·ªßa ·ª©ng d·ª•ng")
            st.write("2. ƒê·∫£m b·∫£o t√™n file ch√≠nh x√°c:")
            st.write(f"   - `{MODEL_TRANSACTION_DATA}`")
            st.write(f"   - `{MODEL_PROMOTION_DATA}`")
            st.write(f"   - `{MODEL_STORE_DATA}`")
            st.stop()
        except Exception as e:
            st.error(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {str(e)}")
            st.stop()

    model_choice = st.selectbox(
        "Ch·ªçn m√¥ h√¨nh d·ª± b√°o:",
        ["Linear Regression", "Prophet", "LSTM", "LightGBM"]
    )

    if st.button(f"Ch·∫°y M√¥ h√¨nh {model_choice}"):
        if df_for_models is not None:
            if model_choice == "Linear Regression":
                run_linear_regression(df_for_models, st)
            elif model_choice == "Prophet":
                run_prophet_model(df_for_models, st)
            elif model_choice == "LSTM":
                run_lstm_model(df_for_models, st)
            elif model_choice == "LightGBM":
                run_lightgbm_model(df_for_models, st)
        else:
            st.error("Kh√¥ng th·ªÉ t·∫£i ho·∫∑c ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu. Vui l√≤ng ki·ªÉm tra ƒë∆∞·ªùng d·∫´n file.")

elif analysis_option == "T·ªëi ∆∞u h√≥a T·ªìn kho":
    st.header("T·ªëi ∆∞u h√≥a V·∫≠n chuy·ªÉn T·ªìn kho")
    st.info(f"ƒêang s·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´: `{OPT_STORE_INFO_DATA}`, `{OPT_TRANS_INFO_DATA}`")
    st.markdown("""
        Ch·ª©c nƒÉng n√†y s·∫Ω t√≠nh to√°n l∆∞·ª£ng s·∫£n ph·∫©m c·∫ßn v·∫≠n chuy·ªÉn gi·ªØa c√°c c·ª≠a h√†ng
        v√† t·ª´ kho trung t√¢m ƒë·ªÉ ƒë√°p ·ª©ng ng∆∞·ª°ng t·ªìn kho t·ªëi thi·ªÉu, nh·∫±m t·ªëi thi·ªÉu h√≥a qu√£ng ƒë∆∞·ªùng v·∫≠n chuy·ªÉn.
    """)
    if st.button("Ch·∫°y T·ªëi ∆∞u h√≥a"):
        run_optimization(
            store_info_path=OPT_STORE_INFO_DATA,
            trans_info_path=OPT_TRANS_INFO_DATA,
            st=st
        )

elif analysis_option == "Ki·ªÉm tra Concept Drift":
    st.header("Ki·ªÉm tra Concept Drift")
    st.info(f"ƒêang s·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´: `{CONCEPT_DRIFT_DATA}`")
    st.markdown("""
        Ch·ª©c nƒÉng n√†y s·ª≠ d·ª•ng Kolmogorov-Smirnov (KS) test ƒë·ªÉ ki·ªÉm tra xem
        ph√¢n ph·ªëi c·ªßa 'Quantity_Sold' c√≥ thay ƒë·ªïi ƒë√°ng k·ªÉ gi·ªØa hai giai ƒëo·∫°n th·ªùi gian hay kh√¥ng.
    """)
    if st.button("Ch·∫°y ki·ªÉm tra Concept Drift"):
        run_concept_drift_check(df_path=CONCEPT_DRIFT_DATA, st=st)
