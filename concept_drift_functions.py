# -*- coding: utf-8 -*-
"""concept_drift_functions

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tKyeZQsApHORqlDZFHZEXgp_HawBlweA
"""

import pandas as pd
import numpy as np
from scipy.stats import ks_2samp
import matplotlib.pyplot as plt
import io

def run_concept_drift_check(df_path='/content/final_dataset.csv', st=None):
    """
    Checks for concept drift in 'Quantity_Sold' using KS test.
    """
    if st is None:
        raise ValueError("Streamlit object (st) must be provided.")

    st.subheader("Kiểm tra Concept Drift (Thay đổi phân phối dữ liệu)")
    st.write("---")

    df = pd.read_csv(df_path)
    df['Date'] = pd.to_datetime(df['Date'], format='%Y-%m-%d')

    # Define the split point (e.g., November 2024)
    split_date = '2024-11-01'
    before_split_data = df[df['Date'] < split_date]['Quantity_Sold'].dropna()
    after_split_data = df[df['Date'] >= split_date]['Quantity_Sold'].dropna()

    if before_split_data.empty or after_split_data.empty:
        st.warning("Không đủ dữ liệu để thực hiện KS Test. Đảm bảo có dữ liệu trước và sau ngày phân chia đã chọn.")
        return

    ks_statistic, p_value = ks_2samp(before_split_data, after_split_data)

    st.write(f"**Ngày phân chia dữ liệu:** Trước vs Sau {split_date}")
    st.write(f"**KS Statistic:** `{ks_statistic:.4f}`")
    st.write(f"**P-value:** `{p_value:.4f}`")

    if p_value < 0.05:
        st.markdown(f"**Kết luận:** Có dấu hiệu **Concept Drift** (P-value < 0.05). Phân phối 'Quantity_Sold' thay đổi đáng kể giữa trước và sau tháng 11/2024.")
    else:
        st.markdown(f"**Kết luận:** Không có đủ bằng chứng để kết luận Concept Drift (P-value >= 0.05).")

    fig = plt.figure(figsize=(10, 6))
    plt.hist(before_split_data, bins=30, alpha=0.5, label=f'Before {split_date}', color='blue')
    plt.hist(after_split_data, bins=30, alpha=0.5, label=f'After {split_date}', color='red')
    plt.legend(loc='upper right')
    plt.title(f'Phân phối Quantity_Sold trước và sau {split_date}')
    plt.xlabel('Quantity_Sold')
    plt.ylabel('Frequency')
    st.pyplot(fig)
    st.write("---")